{"ast":null,"code":"import _objectSpread from \"D:/acm/ACM-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\acm\\\\ACM-main\\\\client\\\\src\\\\pages\\\\customercare\\\\CareBookService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../../utils/authUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CareBookService() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [availableServices, setAvailableServices] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  const [newBookingForm, setNewBookingForm] = useState({\n    service: '',\n    problem: '',\n    // Stores selected problem from dropdown\n    problemDescription: '',\n    // Stores detailed problem if 'Other' is selected\n    date: '',\n    time: '',\n    address: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  // Define common problems for each service category (duplicated from CustomerBookings for UI logic)\n  const serviceProblems = {\n    'AC': ['AC not cooling', 'Water leakage from AC', 'AC making noise', 'AC not turning on', 'Bad odor from AC', 'AC gas refilling'],\n    'Fridge': ['Fridge not cooling', 'Water leakage from fridge', 'Fridge making noise', 'Fridge not turning on', 'Excessive frosting', 'Door seal broken'],\n    'Washing Machine': ['Washing machine not draining', 'Washing machine not spinning', 'Washing machine making noise', 'Washing machine not turning on', 'Water leakage from washing machine', 'Drum not rotating'],\n    'Electrical': ['Power outage in specific area', 'Faulty wiring', 'Socket repair/replacement', 'Light fixture installation/repair', 'Circuit breaker tripping', 'Fan repair/installation'],\n    'Other': [] // For services not explicitly listed or general issues\n  };\n  useEffect(() => {\n    fetchInitialData();\n  }, [navigate]);\n  const fetchInitialData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const token = sessionStorage.getItem('token');\n      if (!token) {\n        logout();\n        navigate('/login');\n        return;\n      }\n\n      // Fetch customers\n      const customersResponse = await axios.get('http://localhost:5000/api/customercare/customers', {\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      });\n      setCustomers(customersResponse.data);\n\n      // Fetch services\n      const servicesResponse = await axios.get('http://localhost:5000/api/services');\n      setAvailableServices(servicesResponse.data);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response3;\n      console.error('Error fetching initial data:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load data. Please try again.');\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401 || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n        logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCustomerChange = e => {\n    const customerId = e.target.value;\n    setSelectedCustomer(customerId);\n    // Pre-fill address if customer is selected\n    const customer = customers.find(c => c._id === customerId);\n    setNewBookingForm(prev => {\n      var _customer$profile;\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        address: (customer === null || customer === void 0 ? void 0 : (_customer$profile = customer.profile) === null || _customer$profile === void 0 ? void 0 : _customer$profile.address) || ''\n      });\n    });\n  };\n  const handleNewBookingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewBookingForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n    if (name === 'service') {\n      // Reset problem when service changes\n      setNewBookingForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        problem: '',\n        problemDescription: ''\n      }));\n    }\n  };\n  const handleNewBookingSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    setSubmitting(true);\n    if (!selectedCustomer) {\n      setError('Please select a customer.');\n      setSubmitting(false);\n      return;\n    }\n    const selectedService = availableServices.find(s => s._id === newBookingForm.service);\n    if (!selectedService) {\n      setError('Please select a service.');\n      setSubmitting(false);\n      return;\n    }\n    let finalProblemDescription = newBookingForm.problem;\n    if (newBookingForm.problem === 'Other' && newBookingForm.problemDescription.trim()) {\n      finalProblemDescription = newBookingForm.problemDescription.trim();\n    } else if (newBookingForm.problem === 'Other' && !newBookingForm.problemDescription.trim()) {\n      setError('Please describe the problem if \"Other\" is selected.');\n      setSubmitting(false);\n      return;\n    } else if (!newBookingForm.problem) {\n      setError('Please select a problem or describe it.');\n      setSubmitting(false);\n      return;\n    }\n    if (!newBookingForm.date || !newBookingForm.time || !newBookingForm.address.trim()) {\n      setError('Please fill all required fields (Date, Time, Address).');\n      setSubmitting(false);\n      return;\n    }\n    try {\n      const token = sessionStorage.getItem('token');\n      await axios.post('http://localhost:5000/api/customercare/bookings', {\n        userId: selectedCustomer,\n        // Send customer ID\n        service: newBookingForm.service,\n        date: newBookingForm.date,\n        time: newBookingForm.time,\n        address: newBookingForm.address.trim(),\n        problemDescription: finalProblemDescription\n      }, {\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      });\n      setSuccess('Booking created successfully for the customer!');\n      // Reset form\n      setSelectedCustomer('');\n      setNewBookingForm({\n        service: '',\n        problem: '',\n        problemDescription: '',\n        date: '',\n        time: '',\n        address: ''\n      });\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error creating booking:', err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to create booking. Please try again.');\n      setTimeout(() => setError(''), 3000);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const getServiceCategory = serviceId => {\n    const service = availableServices.find(s => s._id === serviceId);\n    return service ? service.category : 'Other';\n  };\n  const getProblemsForCategory = category => {\n    return serviceProblems[category] || serviceProblems['Other'];\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card admin-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card-title text-center\",\n      children: \"\\u2795 Book Service for Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewBookingSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Select Customer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCustomer,\n          onChange: handleCustomerChange,\n          className: \"form-control\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), customers.map(customer => {\n            var _customer$profile2;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: customer._id,\n              children: [(_customer$profile2 = customer.profile) === null || _customer$profile2 === void 0 ? void 0 : _customer$profile2.name, \" (\", customer.phone, \")\"]\n            }, customer._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Service:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"service\",\n          value: newBookingForm.service,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), availableServices.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: service._id,\n            children: service.type\n          }, service._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), newBookingForm.service && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Problem:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"problem\",\n          value: newBookingForm.problem,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Problem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), getProblemsForCategory(getServiceCategory(newBookingForm.service)).map((problem, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: problem,\n            children: problem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other (Please specify below)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), newBookingForm.problem === 'Other' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Problem Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"problemDescription\",\n          value: newBookingForm.problemDescription,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          rows: \"3\",\n          placeholder: \"Describe the problem in detail...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: newBookingForm.date,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"time\",\n          value: newBookingForm.time,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"address\",\n          value: newBookingForm.address,\n          onChange: handleNewBookingChange,\n          className: \"form-control\",\n          rows: \"3\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: submitting,\n          className: \"btn btn-primary\",\n          children: submitting ? 'Submitting...' : 'Create Booking'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(CareBookService, \"pwF6mMvKK/gs+k6bKMsZQt1mUcI=\", false, function () {\n  return [useNavigate];\n});\n_c = CareBookService;\nexport default CareBookService;\nvar _c;\n$RefreshReg$(_c, \"CareBookService\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","logout","jsxDEV","_jsxDEV","CareBookService","_s","customers","setCustomers","availableServices","setAvailableServices","selectedCustomer","setSelectedCustomer","newBookingForm","setNewBookingForm","service","problem","problemDescription","date","time","address","loading","setLoading","submitting","setSubmitting","error","setError","success","setSuccess","navigate","serviceProblems","fetchInitialData","token","sessionStorage","getItem","customersResponse","get","headers","Authorization","concat","data","servicesResponse","err","_err$response","_err$response$data","_err$response2","_err$response3","console","response","message","status","handleCustomerChange","e","customerId","target","value","customer","find","c","_id","prev","_customer$profile","_objectSpread","profile","handleNewBookingChange","name","handleNewBookingSubmit","preventDefault","selectedService","s","finalProblemDescription","trim","post","userId","setTimeout","_err$response4","_err$response4$data","getServiceCategory","serviceId","category","getProblemsForCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","_customer$profile2","phone","type","index","rows","placeholder","disabled","_c","$RefreshReg$"],"sources":["D:/acm/ACM-main/client/src/pages/customercare/CareBookService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { logout } from '../../utils/authUtils';\r\n\r\nfunction CareBookService() {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [availableServices, setAvailableServices] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState('');\r\n  const [newBookingForm, setNewBookingForm] = useState({\r\n    service: '',\r\n    problem: '', // Stores selected problem from dropdown\r\n    problemDescription: '', // Stores detailed problem if 'Other' is selected\r\n    date: '',\r\n    time: '',\r\n    address: '',\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Define common problems for each service category (duplicated from CustomerBookings for UI logic)\r\n  const serviceProblems = {\r\n    'AC': [\r\n      'AC not cooling', 'Water leakage from AC', 'AC making noise', \r\n      'AC not turning on', 'Bad odor from AC', 'AC gas refilling'\r\n    ],\r\n    'Fridge': [\r\n      'Fridge not cooling', 'Water leakage from fridge', 'Fridge making noise',\r\n      'Fridge not turning on', 'Excessive frosting', 'Door seal broken'\r\n    ],\r\n    'Washing Machine': [\r\n      'Washing machine not draining', 'Washing machine not spinning', 'Washing machine making noise',\r\n      'Washing machine not turning on', 'Water leakage from washing machine', 'Drum not rotating'\r\n    ],\r\n    'Electrical': [\r\n      'Power outage in specific area', 'Faulty wiring', 'Socket repair/replacement',\r\n      'Light fixture installation/repair', 'Circuit breaker tripping', 'Fan repair/installation'\r\n    ],\r\n    'Other': [] // For services not explicitly listed or general issues\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInitialData();\r\n  }, [navigate]);\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const token = sessionStorage.getItem('token');\r\n      if (!token) {\r\n        logout();\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      // Fetch customers\r\n      const customersResponse = await axios.get('http://localhost:5000/api/customercare/customers', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setCustomers(customersResponse.data);\r\n\r\n      // Fetch services\r\n      const servicesResponse = await axios.get('http://localhost:5000/api/services');\r\n      setAvailableServices(servicesResponse.data);\r\n\r\n    } catch (err) {\r\n      console.error('Error fetching initial data:', err);\r\n      setError(err.response?.data?.message || 'Failed to load data. Please try again.');\r\n      if (err.response?.status === 401 || err.response?.status === 403) {\r\n        logout();\r\n        navigate('/login');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCustomerChange = (e) => {\r\n    const customerId = e.target.value;\r\n    setSelectedCustomer(customerId);\r\n    // Pre-fill address if customer is selected\r\n    const customer = customers.find(c => c._id === customerId);\r\n    setNewBookingForm(prev => ({ ...prev, address: customer?.profile?.address || '' }));\r\n  };\r\n\r\n  const handleNewBookingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewBookingForm(prev => ({ ...prev, [name]: value }));\r\n    if (name === 'service') {\r\n      // Reset problem when service changes\r\n      setNewBookingForm(prev => ({ ...prev, problem: '', problemDescription: '' }));\r\n    }\r\n  };\r\n\r\n  const handleNewBookingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    setSubmitting(true);\r\n\r\n    if (!selectedCustomer) {\r\n      setError('Please select a customer.');\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    const selectedService = availableServices.find(s => s._id === newBookingForm.service);\r\n    if (!selectedService) {\r\n      setError('Please select a service.');\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    let finalProblemDescription = newBookingForm.problem;\r\n    if (newBookingForm.problem === 'Other' && newBookingForm.problemDescription.trim()) {\r\n      finalProblemDescription = newBookingForm.problemDescription.trim();\r\n    } else if (newBookingForm.problem === 'Other' && !newBookingForm.problemDescription.trim()) {\r\n      setError('Please describe the problem if \"Other\" is selected.');\r\n      setSubmitting(false);\r\n      return;\r\n    } else if (!newBookingForm.problem) {\r\n      setError('Please select a problem or describe it.');\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    if (!newBookingForm.date || !newBookingForm.time || !newBookingForm.address.trim()) {\r\n      setError('Please fill all required fields (Date, Time, Address).');\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = sessionStorage.getItem('token');\r\n      await axios.post('http://localhost:5000/api/customercare/bookings', {\r\n        userId: selectedCustomer, // Send customer ID\r\n        service: newBookingForm.service,\r\n        date: newBookingForm.date,\r\n        time: newBookingForm.time,\r\n        address: newBookingForm.address.trim(),\r\n        problemDescription: finalProblemDescription,\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      setSuccess('Booking created successfully for the customer!');\r\n      // Reset form\r\n      setSelectedCustomer('');\r\n      setNewBookingForm({\r\n        service: '', problem: '', problemDescription: '', date: '', time: '', address: ''\r\n      });\r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      console.error('Error creating booking:', err);\r\n      setError(err.response?.data?.message || 'Failed to create booking. Please try again.');\r\n      setTimeout(() => setError(''), 3000);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getServiceCategory = (serviceId) => {\r\n    const service = availableServices.find(s => s._id === serviceId);\r\n    return service ? service.category : 'Other';\r\n  };\r\n\r\n  const getProblemsForCategory = (category) => {\r\n    return serviceProblems[category] || serviceProblems['Other'];\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center p-8\">\r\n        <p>Loading data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card admin-page-container\">\r\n      <h3 className=\"card-title text-center\">➕ Book Service for Customer</h3>\r\n      \r\n      {error && <div className=\"status-message error\">{error}</div>}\r\n      {success && <div className=\"status-message success\">{success}</div>}\r\n\r\n      <form onSubmit={handleNewBookingSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Select Customer:</label>\r\n          <select\r\n            value={selectedCustomer}\r\n            onChange={handleCustomerChange}\r\n            className=\"form-control\"\r\n            required\r\n          >\r\n            <option value=\"\">Select a Customer</option>\r\n            {customers.map((customer) => (\r\n              <option key={customer._id} value={customer._id}>\r\n                {customer.profile?.name} ({customer.phone})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Service:</label>\r\n          <select\r\n            name=\"service\"\r\n            value={newBookingForm.service}\r\n            onChange={handleNewBookingChange}\r\n            className=\"form-control\"\r\n            required\r\n          >\r\n            <option value=\"\">Select Service</option>\r\n            {availableServices.map((service) => (\r\n              <option key={service._id} value={service._id}>{service.type}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {newBookingForm.service && (\r\n          <div className=\"form-group\">\r\n            <label>Problem:</label>\r\n            <select\r\n              name=\"problem\"\r\n              value={newBookingForm.problem}\r\n              onChange={handleNewBookingChange}\r\n              className=\"form-control\"\r\n              required\r\n            >\r\n              <option value=\"\">Select Problem</option>\r\n              {getProblemsForCategory(getServiceCategory(newBookingForm.service)).map((problem, index) => (\r\n                <option key={index} value={problem}>{problem}</option>\r\n              ))}\r\n              <option value=\"Other\">Other (Please specify below)</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {newBookingForm.problem === 'Other' && (\r\n          <div className=\"form-group\">\r\n            <label>Problem Description:</label>\r\n            <textarea\r\n              name=\"problemDescription\"\r\n              value={newBookingForm.problemDescription}\r\n              onChange={handleNewBookingChange}\r\n              className=\"form-control\"\r\n              rows=\"3\"\r\n              placeholder=\"Describe the problem in detail...\"\r\n              required\r\n            ></textarea>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label>Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={newBookingForm.date}\r\n            onChange={handleNewBookingChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Time:</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={newBookingForm.time}\r\n            onChange={handleNewBookingChange}\r\n            className=\"form-control\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Address:</label>\r\n          <textarea\r\n            name=\"address\"\r\n            value={newBookingForm.address}\r\n            onChange={handleNewBookingChange}\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"text-center mt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={submitting}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            {submitting ? 'Submitting...' : 'Create Booking'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CareBookService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}