{"ast":null,"code":"import _objectSpread from \"D:/acm/ACM-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\acm\\\\ACM-main\\\\client\\\\src\\\\pages\\\\admin\\\\AdminServices.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\n// API base URL for service management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/services';\nconst UPLOAD_URL = 'http://localhost:5000/api/upload/image'; // Backend image upload endpoint\n\nfunction AdminServices() {\n  _s();\n  const [services, setServices] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [form, setForm] = useState({\n    type: '',\n    description: '',\n    category: '',\n    imageUrl: '' // NEW: Add imageUrl to form state\n  });\n  const [imageFile, setImageFile] = useState(null); // NEW: State for the selected image file\n  const [uploadingImage, setUploadingImage] = useState(false); // NEW: State for image upload loading\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState('');\n\n  // Fetch services from database on mount\n  useEffect(() => {\n    fetchServices();\n  }, []);\n  async function fetchServices() {\n    try {\n      setLoading(true);\n      setSubmitError('');\n      const token = sessionStorage.getItem('token');\n      const headers = token ? {\n        Authorization: \"Bearer \".concat(token)\n      } : {};\n      const {\n        data\n      } = await axios.get(API_URL, {\n        headers\n      });\n      setServices(data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching services:', err);\n      setSubmitError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load services. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n  function openModal() {\n    let service = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    setSubmitError('');\n    setSubmitSuccess('');\n    setImageFile(null); // Clear selected image file\n    if (service) {\n      setEditingService(service);\n      setForm({\n        type: service.type || '',\n        description: service.description || '',\n        category: service.category || '',\n        imageUrl: service.imageUrl || '' // Pre-fill imageUrl if exists\n      });\n    } else {\n      setEditingService(null);\n      setForm({\n        type: '',\n        description: '',\n        category: '',\n        imageUrl: ''\n      });\n    }\n    setShowModal(true);\n  }\n  const handleImageFileChange = e => {\n    setImageFile(e.target.files[0]);\n    setSubmitError(''); // Clear error when new file is selected\n  };\n  const uploadImage = async () => {\n    if (!imageFile) {\n      setSubmitError('Please select an image to upload.');\n      return null;\n    }\n    setUploadingImage(true);\n    setSubmitError('');\n    try {\n      const token = sessionStorage.getItem('token');\n      const formData = new FormData();\n      formData.append('image', imageFile);\n      const response = await axios.post(UPLOAD_URL, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': \"Bearer \".concat(token)\n        }\n      });\n      setUploadingImage(false);\n      return response.data.imageUrl; // Return the Cloudinary URL\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading image:', error);\n      setSubmitError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to upload image.');\n      setUploadingImage(false);\n      return null;\n    }\n  };\n  async function saveService() {\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      // Client-side validation\n      if (!form.type.trim()) {\n        setSubmitError('Service Type is required');\n        return;\n      }\n      if (!form.category.trim()) {\n        setSubmitError('Category is required');\n        return;\n      }\n      let finalImageUrl = form.imageUrl; // Start with existing image URL\n\n      // If a new image file is selected, upload it\n      if (imageFile) {\n        const uploadedUrl = await uploadImage();\n        if (!uploadedUrl) {\n          // Error during upload, stop saving service\n          return;\n        }\n        finalImageUrl = uploadedUrl;\n      } else if (!finalImageUrl) {\n        // If no new file and no existing URL, then image is missing\n        setSubmitError('Service Image is required.');\n        return;\n      }\n      const token = sessionStorage.getItem('token');\n      if (!token) {\n        setSubmitError('Authentication required. Please log in.');\n        return;\n      }\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(token)\n      };\n      const serviceData = {\n        type: form.type.trim(),\n        description: form.description.trim(),\n        category: form.category.trim(),\n        imageUrl: finalImageUrl // Use the final image URL\n      };\n      if (editingService) {\n        await axios.put(\"\".concat(API_URL, \"/\").concat(editingService._id), serviceData, {\n          headers\n        });\n        setSubmitSuccess('Service updated successfully');\n      } else {\n        await axios.post(API_URL, serviceData, {\n          headers\n        });\n        setSubmitSuccess('Service created successfully');\n      }\n      setShowModal(false);\n      fetchServices();\n      setTimeout(() => setSubmitSuccess(''), 3000);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error saving service:', error);\n      setSubmitError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n    }\n  }\n  async function deleteService(id) {\n    if (!window.confirm('Are you sure you want to delete this service?')) return;\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      const token = sessionStorage.getItem('token');\n      if (!token) {\n        setSubmitError(\"Authentication required. Please log in.\");\n        return;\n      }\n      await axios.delete(\"\".concat(API_URL, \"/\").concat(id), {\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      });\n      await fetchServices();\n      setSubmitSuccess('Service deleted successfully');\n      setTimeout(() => setSubmitSuccess(''), 3000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Delete failed', err);\n      setSubmitError(\"Error deleting service: \".concat(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Unknown error'));\n    }\n  }\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(f => _objectSpread(_objectSpread({}, f), {}, {\n      [name]: value\n    }));\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading services...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Service Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: submitSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        className: \"btn btn-accent\",\n        children: \"\\u2795 Add New Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: services.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"text-center\",\n              children: \"No services found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this) : services.map(service => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: service.imageUrl,\n                alt: service.type,\n                style: {\n                  width: '50px',\n                  height: '50px',\n                  objectFit: 'cover',\n                  borderRadius: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this) : 'No Image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge \".concat(service.status === 'active' ? 'status-success' : 'status-error'),\n                children: service.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openModal(service),\n                className: \"btn btn-secondary btn-sm\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteService(service._id),\n                className: \"btn btn-danger btn-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, service._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: editingService ? 'Edit Service' : 'Add New Service'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Service Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"type\",\n            type: \"text\",\n            value: form.type,\n            onChange: handleChange,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: form.description,\n            onChange: handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"category\",\n            type: \"text\",\n            value: form.category,\n            onChange: handleChange,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Service Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageFileChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), (form.imageUrl || imageFile) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '0.9rem',\n                color: 'var(--color-textLight)'\n              },\n              children: \"Image Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageFile ? URL.createObjectURL(imageFile) : form.imageUrl,\n              alt: \"Service Preview\",\n              style: {\n                maxWidth: '150px',\n                maxHeight: '150px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                border: '1px solid var(--border)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), uploadingImage && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'var(--color-secondary)',\n              textAlign: 'center',\n              marginTop: '10px'\n            },\n            children: \"Uploading image...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\" // Changed to type=\"button\" to prevent form submission before image upload\n            ,\n            onClick: () => setShowModal(false),\n            className: \"btn btn-outline\",\n            disabled: uploadingImage,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\" // Changed to type=\"button\" to prevent form submission before image upload\n            ,\n            onClick: saveService,\n            className: \"btn btn-primary\",\n            disabled: uploadingImage || !form.type.trim() || !form.category.trim() || !form.imageUrl && !imageFile,\n            children: uploadingImage ? 'Uploading...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminServices, \"a14ABD2ACRpr6Ja5gRanaCIGTVg=\");\n_c = AdminServices;\nexport default AdminServices;\nvar _c;\n$RefreshReg$(_c, \"AdminServices\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","API_URL","UPLOAD_URL","AdminServices","_s","services","setServices","showModal","setShowModal","editingService","setEditingService","form","setForm","type","description","category","imageUrl","imageFile","setImageFile","uploadingImage","setUploadingImage","loading","setLoading","submitError","setSubmitError","submitSuccess","setSubmitSuccess","fetchServices","token","sessionStorage","getItem","headers","Authorization","concat","data","get","err","_err$response","_err$response$data","console","error","response","message","openModal","service","arguments","length","undefined","handleImageFileChange","e","target","files","uploadImage","formData","FormData","append","post","_error$response","_error$response$data","saveService","trim","finalImageUrl","uploadedUrl","serviceData","put","_id","setTimeout","_error$response2","_error$response2$data","deleteService","id","window","confirm","delete","_err$response2","_err$response2$data","handleChange","name","value","f","_objectSpread","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginBottom","onClick","colSpan","map","src","alt","width","height","objectFit","borderRadius","status","onChange","required","accept","marginTop","textAlign","fontSize","color","URL","createObjectURL","maxWidth","maxHeight","border","disabled","_c","$RefreshReg$"],"sources":["D:/acm/ACM-main/client/src/pages/admin/AdminServices.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\n// API base URL for service management\nconst API_URL = 'http://localhost:5000/api/services';\nconst UPLOAD_URL = 'http://localhost:5000/api/upload/image'; // Backend image upload endpoint\n\nfunction AdminServices() {\n  const [services, setServices] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [form, setForm] = useState({\n    type: '',\n    description: '',\n    category: '',\n    imageUrl: '', // NEW: Add imageUrl to form state\n  });\n  const [imageFile, setImageFile] = useState(null); // NEW: State for the selected image file\n  const [uploadingImage, setUploadingImage] = useState(false); // NEW: State for image upload loading\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState('');\n\n  // Fetch services from database on mount\n  useEffect(() => {\n    fetchServices();\n  }, []);\n\n  async function fetchServices() {\n    try {\n      setLoading(true);\n      setSubmitError('');\n      const token = sessionStorage.getItem('token');\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const { data } = await axios.get(API_URL, { headers });\n      setServices(data);\n    } catch (err) {\n      console.error('Error fetching services:', err);\n      setSubmitError(err.response?.data?.message || 'Failed to load services. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function openModal(service = null) {\n    setSubmitError('');\n    setSubmitSuccess('');\n    setImageFile(null); // Clear selected image file\n    if (service) {\n      setEditingService(service);\n      setForm({\n        type: service.type || '',\n        description: service.description || '',\n        category: service.category || '',\n        imageUrl: service.imageUrl || '', // Pre-fill imageUrl if exists\n      });\n    } else {\n      setEditingService(null);\n      setForm({ type: '', description: '', category: '', imageUrl: '' });\n    }\n    setShowModal(true);\n  }\n\n  const handleImageFileChange = (e) => {\n    setImageFile(e.target.files[0]);\n    setSubmitError(''); // Clear error when new file is selected\n  };\n\n  const uploadImage = async () => {\n    if (!imageFile) {\n      setSubmitError('Please select an image to upload.');\n      return null;\n    }\n\n    setUploadingImage(true);\n    setSubmitError('');\n    try {\n      const token = sessionStorage.getItem('token');\n      const formData = new FormData();\n      formData.append('image', imageFile);\n\n      const response = await axios.post(UPLOAD_URL, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setUploadingImage(false);\n      return response.data.imageUrl; // Return the Cloudinary URL\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setSubmitError(error.response?.data?.message || 'Failed to upload image.');\n      setUploadingImage(false);\n      return null;\n    }\n  };\n\n  async function saveService() {\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      // Client-side validation\n      if (!form.type.trim()) {\n        setSubmitError('Service Type is required');\n        return;\n      }\n      if (!form.category.trim()) {\n        setSubmitError('Category is required');\n        return;\n      }\n\n      let finalImageUrl = form.imageUrl; // Start with existing image URL\n\n      // If a new image file is selected, upload it\n      if (imageFile) {\n        const uploadedUrl = await uploadImage();\n        if (!uploadedUrl) {\n          // Error during upload, stop saving service\n          return;\n        }\n        finalImageUrl = uploadedUrl;\n      } else if (!finalImageUrl) {\n        // If no new file and no existing URL, then image is missing\n        setSubmitError('Service Image is required.');\n        return;\n      }\n\n      const token = sessionStorage.getItem('token');\n      if (!token) {\n        setSubmitError('Authentication required. Please log in.');\n        return;\n      }\n\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n\n      const serviceData = {\n        type: form.type.trim(),\n        description: form.description.trim(),\n        category: form.category.trim(),\n        imageUrl: finalImageUrl, // Use the final image URL\n      };\n\n      if (editingService) {\n        await axios.put(`${API_URL}/${editingService._id}`, serviceData, { headers });\n        setSubmitSuccess('Service updated successfully');\n      } else {\n        await axios.post(API_URL, serviceData, { headers });\n        setSubmitSuccess('Service created successfully');\n      }\n      \n      setShowModal(false);\n      fetchServices();\n      setTimeout(() => setSubmitSuccess(''), 3000);\n    } catch (error) {\n      console.error('Error saving service:', error);\n      setSubmitError(error.response?.data?.message || error.message);\n    }\n  }\n\n  async function deleteService(id) {\n    if (!window.confirm('Are you sure you want to delete this service?')) return;\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      const token = sessionStorage.getItem('token');\n      if (!token) {\n        setSubmitError(\"Authentication required. Please log in.\");\n        return;\n      }\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      await fetchServices();\n      setSubmitSuccess('Service deleted successfully');\n      setTimeout(() => setSubmitSuccess(''), 3000);\n    } catch (err) {\n      console.error('Delete failed', err);\n      setSubmitError(`Error deleting service: ${err.response?.data?.message || 'Unknown error'}`);\n    }\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setForm(f => ({ ...f, [name]: value }));\n  }\n\n  if (loading) {\n    return <p className=\"text-center\">Loading services...</p>;\n  }\n\n  return (\n    <div className=\"admin-page-container\">\n      <h2 className=\"page-title\">Service Management</h2>\n\n      {submitError && (\n        <div className=\"status-message error\">\n          {submitError}\n        </div>\n      )}\n      {submitSuccess && (\n        <div className=\"status-message success\">\n          {submitSuccess}\n        </div>\n      )}\n\n      {/* Add Service Button */}\n      <div style={{ display: 'flex', justifyContent: 'flex-start', marginBottom: '1rem' }}>\n        <button\n          onClick={() => openModal()}\n          className=\"btn btn-accent\"\n        >\n          ➕ Add New Service\n        </button>\n      </div>\n\n      {/* Services Table */}\n      <div>\n        <table className=\"data-table\">\n          <thead>\n            <tr>\n              <th>Type</th>\n              <th>Description</th>\n              <th>Category</th>\n              <th>Image</th> {/* NEW: Image column */}\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {services.length === 0 ? (\n              <tr>\n                <td colSpan=\"6\" className=\"text-center\">\n                  No services found.\n                </td>\n              </tr>\n            ) : (\n              services.map(service => (\n                <tr key={service._id}>\n                  <td>{service.type}</td>\n                  <td>{service.description}</td>\n                  <td>{service.category}</td>\n                  <td>\n                    {service.imageUrl ? (\n                      <img src={service.imageUrl} alt={service.type} style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '4px' }} />\n                    ) : (\n                      'No Image'\n                    )}\n                  </td>\n                  <td>\n                    <span\n                      className={`status-badge ${service.status === 'active' ? 'status-success' : 'status-error'}`}\n                    >\n                      {service.status}\n                    </span>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => openModal(service)}\n                      className=\"btn btn-secondary btn-sm\"\n                    >\n                      Edit\n                    </button>\n                    <button\n                      onClick={() => deleteService(service._id)}\n                      className=\"btn btn-danger btn-sm\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Modal for Add/Edit Service */}\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3 className=\"modal-title\">{editingService ? 'Edit Service' : 'Add New Service'}</h3>\n\n            <div className=\"form-group\">\n              <label>Service Type:</label>\n              <input\n                name=\"type\"\n                type=\"text\"\n                value={form.type}\n                onChange={handleChange}\n                className=\"form-control\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Description:</label>\n              <textarea\n                name=\"description\"\n                value={form.description}\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Category:</label>\n              <input\n                name=\"category\"\n                type=\"text\"\n                value={form.category}\n                onChange={handleChange}\n                className=\"form-control\"\n                required\n              />\n            </div>\n\n            {/* NEW: Image Upload Field */}\n            <div className=\"form-group\">\n              <label>Service Image:</label>\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleImageFileChange}\n                className=\"form-control\"\n              />\n              {(form.imageUrl || imageFile) && (\n                <div style={{ marginTop: '10px', textAlign: 'center' }}>\n                  <p style={{ fontSize: '0.9rem', color: 'var(--color-textLight)' }}>Image Preview:</p>\n                  <img \n                    src={imageFile ? URL.createObjectURL(imageFile) : form.imageUrl} \n                    alt=\"Service Preview\" \n                    style={{ maxWidth: '150px', maxHeight: '150px', objectFit: 'cover', borderRadius: '8px', border: '1px solid var(--border)' }} \n                  />\n                </div>\n              )}\n              {uploadingImage && <p style={{ color: 'var(--color-secondary)', textAlign: 'center', marginTop: '10px' }}>Uploading image...</p>}\n            </div>\n\n            <div className=\"modal-actions\">\n              <button\n                type=\"button\" // Changed to type=\"button\" to prevent form submission before image upload\n                onClick={() => setShowModal(false)}\n                className=\"btn btn-outline\"\n                disabled={uploadingImage}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\" // Changed to type=\"button\" to prevent form submission before image upload\n                onClick={saveService}\n                className=\"btn btn-primary\"\n                disabled={uploadingImage || !form.type.trim() || !form.category.trim() || (!form.imageUrl && !imageFile)}\n              >\n                {uploadingImage ? 'Uploading...' : 'Save'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminServices;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}