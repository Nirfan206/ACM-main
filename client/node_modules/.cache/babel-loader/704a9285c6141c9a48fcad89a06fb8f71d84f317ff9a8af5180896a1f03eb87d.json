{"ast":null,"code":"import _objectSpread from \"D:/acm/ACM-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\acm\\\\ACM-main\\\\client\\\\src\\\\pages\\\\admin\\\\AdminServices.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// API base URL for service management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/services';\nfunction AdminServices() {\n  _s();\n  const [services, setServices] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [form, setForm] = useState({\n    type: '',\n    description: '',\n    // price: '', // Removed price from form state\n    category: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState('');\n\n  // Fetch services from database on mount\n  useEffect(() => {\n    fetchServices();\n  }, []);\n  async function fetchServices() {\n    try {\n      setLoading(true);\n      setSubmitError('');\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      // Services route is public for GET, but admin routes are protected.\n      // For consistency, we'll include token if available, though not strictly needed for GET /api/services\n      const headers = token ? {\n        Authorization: \"Bearer \".concat(token)\n      } : {};\n      const {\n        data\n      } = await axios.get(API_URL, {\n        headers\n      });\n      setServices(data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching services:', err);\n      setSubmitError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load services. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n  function openModal() {\n    let service = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    setSubmitError('');\n    setSubmitSuccess('');\n    if (service) {\n      setEditingService(service);\n      setForm({\n        type: service.type || '',\n        description: service.description || '',\n        // price: service.price || '', // Removed price\n        category: service.category || ''\n      });\n    } else {\n      setEditingService(null);\n      setForm({\n        type: '',\n        description: '',\n        category: ''\n      }); // Removed price\n    }\n    setShowModal(true);\n  }\n  async function saveService() {\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      // Client-side validation\n      if (!form.type.trim()) {\n        setSubmitError('Service Type is required');\n        return;\n      }\n      // Removed price validation\n      // if (!form.price || isNaN(Number(form.price)) || Number(form.price) <= 0) {\n      //   setSubmitError('Price must be a positive number');\n      //   return;\n      // }\n\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      if (!token) {\n        setSubmitError('Authentication required. Please log in.');\n        return;\n      }\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(token)\n      };\n      const serviceData = {\n        type: form.type.trim(),\n        description: form.description.trim(),\n        // price: Number(form.price), // Removed price\n        category: form.category.trim()\n      };\n      if (editingService) {\n        // Update existing service\n        await axios.put(\"\".concat(API_URL, \"/\").concat(editingService._id), serviceData, {\n          headers\n        });\n        setSubmitSuccess('Service updated successfully');\n      } else {\n        // Create new service\n        await axios.post(API_URL, serviceData, {\n          headers\n        });\n        setSubmitSuccess('Service created successfully');\n      }\n      setShowModal(false);\n      fetchServices(); // Refresh the list\n      setTimeout(() => setSubmitSuccess(''), 3000); // Clear success message\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error saving service:', error);\n      setSubmitError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    }\n  }\n  async function deleteService(id) {\n    if (!window.confirm('Are you sure you want to delete this service?')) return;\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      if (!token) {\n        setSubmitError(\"Authentication required. Please log in.\");\n        return;\n      }\n      await axios.delete(\"\".concat(API_URL, \"/\").concat(id), {\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      });\n      await fetchServices();\n      setSubmitSuccess('Service deleted successfully');\n      setTimeout(() => setSubmitSuccess(''), 3000); // Clear success message\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Delete failed', err);\n      setSubmitError(\"Error deleting service: \".concat(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Unknown error'));\n    }\n  }\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(f => _objectSpread(_objectSpread({}, f), {}, {\n      [name]: value\n    }));\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading services...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"page-title\",\n      children: \"Service Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: submitError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), submitSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: submitSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openModal(),\n      className: \"btn btn-accent\",\n      children: \"\\u2795 Add New Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: services.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            className: \"text-center\",\n            children: [\" \", \"No services found.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : services.map(service => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: service.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-badge \".concat(service.status === 'active' ? 'status-success' : 'status-error'),\n              children: service.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openModal(service),\n              className: \"btn btn-secondary btn-sm\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteService(service._id),\n              className: \"btn btn-danger btn-sm\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, service._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal-title\",\n          children: editingService ? 'Edit Service' : 'Add New Service'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Service Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"type\",\n            type: \"text\",\n            value: form.type,\n            onChange: handleChange,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: form.description,\n            onChange: handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"category\",\n            type: \"text\",\n            value: form.category,\n            onChange: handleChange,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"btn btn-outline\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveService,\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminServices, \"1Qi05Rdi5Z6YOjbHifL/FxEXd6o=\");\n_c = AdminServices;\nexport default AdminServices;\nvar _c;\n$RefreshReg$(_c, \"AdminServices\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","AdminServices","_s","services","setServices","showModal","setShowModal","editingService","setEditingService","form","setForm","type","description","category","loading","setLoading","submitError","setSubmitError","submitSuccess","setSubmitSuccess","fetchServices","token","sessionStorage","getItem","headers","Authorization","concat","data","get","err","_err$response","_err$response$data","console","error","response","message","openModal","service","arguments","length","undefined","saveService","trim","serviceData","put","_id","post","setTimeout","_error$response","_error$response$data","deleteService","id","window","confirm","delete","_err$response2","_err$response2$data","handleChange","e","name","value","target","f","_objectSpread","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","colSpan","map","status","onChange","required","_c","$RefreshReg$"],"sources":["D:/acm/ACM-main/client/src/pages/admin/AdminServices.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// API base URL for service management\nconst API_URL = 'http://localhost:5000/api/services';\n\nfunction AdminServices() {\n  const [services, setServices] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [form, setForm] = useState({\n    type: '',\n    description: '',\n    // price: '', // Removed price from form state\n    category: '',\n  });\n  const [loading, setLoading] = useState(true);\n  const [submitError, setSubmitError] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState('');\n\n  // Fetch services from database on mount\n  useEffect(() => {\n    fetchServices();\n  }, []);\n\n  async function fetchServices() {\n    try {\n      setLoading(true);\n      setSubmitError('');\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      // Services route is public for GET, but admin routes are protected.\n      // For consistency, we'll include token if available, though not strictly needed for GET /api/services\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const { data } = await axios.get(API_URL, { headers });\n      setServices(data);\n    } catch (err) {\n      console.error('Error fetching services:', err);\n      setSubmitError(err.response?.data?.message || 'Failed to load services. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function openModal(service = null) {\n    setSubmitError('');\n    setSubmitSuccess('');\n    if (service) {\n      setEditingService(service);\n      setForm({\n        type: service.type || '',\n        description: service.description || '',\n        // price: service.price || '', // Removed price\n        category: service.category || '',\n      });\n    } else {\n      setEditingService(null);\n      setForm({ type: '', description: '', category: '' }); // Removed price\n    }\n    setShowModal(true);\n  }\n\n  async function saveService() {\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      // Client-side validation\n      if (!form.type.trim()) {\n        setSubmitError('Service Type is required');\n        return;\n      }\n      // Removed price validation\n      // if (!form.price || isNaN(Number(form.price)) || Number(form.price) <= 0) {\n      //   setSubmitError('Price must be a positive number');\n      //   return;\n      // }\n\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      if (!token) {\n        setSubmitError('Authentication required. Please log in.');\n        return;\n      }\n\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n\n      const serviceData = {\n        type: form.type.trim(),\n        description: form.description.trim(),\n        // price: Number(form.price), // Removed price\n        category: form.category.trim(),\n      };\n\n      if (editingService) {\n        // Update existing service\n        await axios.put(`${API_URL}/${editingService._id}`, serviceData, { headers });\n        setSubmitSuccess('Service updated successfully');\n      } else {\n        // Create new service\n        await axios.post(API_URL, serviceData, { headers });\n        setSubmitSuccess('Service created successfully');\n      }\n      \n      setShowModal(false);\n      fetchServices(); // Refresh the list\n      setTimeout(() => setSubmitSuccess(''), 3000); // Clear success message\n    } catch (error) {\n      console.error('Error saving service:', error);\n      setSubmitError(error.response?.data?.message || error.message);\n    }\n  }\n\n  async function deleteService(id) {\n    if (!window.confirm('Are you sure you want to delete this service?')) return;\n    setSubmitError('');\n    setSubmitSuccess('');\n    try {\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      if (!token) {\n        setSubmitError(\"Authentication required. Please log in.\");\n        return;\n      }\n      await axios.delete(`${API_URL}/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      await fetchServices();\n      setSubmitSuccess('Service deleted successfully');\n      setTimeout(() => setSubmitSuccess(''), 3000); // Clear success message\n    } catch (err) {\n      console.error('Delete failed', err);\n      setSubmitError(`Error deleting service: ${err.response?.data?.message || 'Unknown error'}`);\n    }\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setForm(f => ({ ...f, [name]: value }));\n  }\n\n  if (loading) {\n    return <p className=\"text-center\">Loading services...</p>;\n  }\n\n  return (\n    <div className=\"admin-page-container\">\n      <h2 className=\"page-title\">Service Management</h2>\n\n      {submitError && (\n        <div className=\"status-message error\">\n          {submitError}\n        </div>\n      )}\n      {submitSuccess && (\n        <div className=\"status-message success\">\n          {submitSuccess}\n        </div>\n      )}\n\n      {/* Add Service Button */}\n      <button\n        onClick={() => openModal()}\n        className=\"btn btn-accent\"\n      >\n        ➕ Add New Service\n      </button>\n\n      {/* Services Table */}\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Description</th>\n            {/* <th>Price (₹)</th> */} {/* Removed price column */}\n            <th>Category</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {services.length === 0 ? (\n            <tr>\n              <td colSpan=\"5\" className=\"text-center\"> {/* Adjusted colspan */}\n                No services found.\n              </td>\n            </tr>\n          ) : (\n            services.map(service => (\n              <tr key={service._id}>\n                <td>{service.type}</td>\n                <td>{service.description}</td>\n                {/* <td>₹{service.price.toFixed(2)}</td> */} {/* Removed price display */}\n                <td>{service.category}</td>\n                <td>\n                  <span\n                    className={`status-badge ${service.status === 'active' ? 'status-success' : 'status-error'}`}\n                  >\n                    {service.status}\n                  </span>\n                </td>\n                <td>\n                  <button\n                    onClick={() => openModal(service)}\n                    className=\"btn btn-secondary btn-sm\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => deleteService(service._id)}\n                    className=\"btn btn-danger btn-sm\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n\n      {/* Modal for Add/Edit Service */}\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3 className=\"modal-title\">{editingService ? 'Edit Service' : 'Add New Service'}</h3>\n\n            <div className=\"form-group\">\n              <label>Service Type:</label>\n              <input\n                name=\"type\"\n                type=\"text\"\n                value={form.type}\n                onChange={handleChange}\n                className=\"form-control\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Description:</label>\n              <textarea\n                name=\"description\"\n                value={form.description}\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n\n            {/* Removed price input field */}\n            {/* <div className=\"form-group\">\n              <label>Price (₹):</label>\n              <input\n                name=\"price\"\n                type=\"number\"\n                value={form.price}\n                onChange={handleChange}\n                className=\"form-control\"\n                required\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div> */}\n\n            <div className=\"form-group\">\n              <label>Category:</label>\n              <input\n                name=\"category\"\n                type=\"text\"\n                value={form.category}\n                onChange={handleChange}\n                className=\"form-control\"\n              />\n            </div>\n\n            <div className=\"modal-actions\">\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"btn btn-outline\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={saveService}\n                className=\"btn btn-primary\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminServices;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}