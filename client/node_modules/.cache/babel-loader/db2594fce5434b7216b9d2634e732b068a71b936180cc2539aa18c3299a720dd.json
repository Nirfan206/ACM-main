{"ast":null,"code":"import _objectSpread from \"D:/acm/ACM-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\acm\\\\ACM-main\\\\client\\\\src\\\\pages\\\\employee\\\\EmployeeJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport ReactToPrint from 'react-to-print'; // NEW: Import ReactToPrint\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeJobs() {\n  _s();\n  var _selectedJob$user, _selectedJob$user$pro, _selectedJob$user2, _selectedJob$user3, _selectedJob$user4, _selectedJob$user4$pr, _selectedJob$service;\n  const [jobs, setJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [statusUpdate, setStatusUpdate] = useState(\"\");\n  const [notesUpdate, setNotesUpdate] = useState(\"\"); // NEW: State for notes\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const componentRef = useRef(); // NEW: Ref for the component to print\n\n  // Fetch jobs from API\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        setLoading(true);\n        const token = sessionStorage.getItem('token'); // Changed from localStorage\n\n        if (!token) {\n          setError(\"Authentication required. Please log in.\");\n          setLoading(false);\n          return;\n        }\n        const response = await axios.get('http://localhost:5000/api/employee/jobs', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        });\n        setJobs(response.data);\n        setLoading(false);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching jobs:\", err);\n        setError(\"Failed to load jobs. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    fetchJobs(); // Initial fetch\n\n    const intervalId = setInterval(fetchJobs, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(intervalId); // Clean up interval on component unmount\n  }, []);\n  const handleStatusChange = async jobId => {\n    if (!statusUpdate) return;\n    try {\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n\n      if (!token) {\n        setError(\"Authentication required. Please log in.\");\n        return;\n      }\n\n      // Correct API endpoint for updating job status\n      await axios.put(\"http://localhost:5000/api/employee/jobs/\".concat(jobId), {\n        status: statusUpdate,\n        notes: notesUpdate.trim()\n      },\n      // Include notes\n      {\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      });\n\n      // Update local state after successful API call\n      const updatedJobs = jobs.map(job => job._id === jobId ? _objectSpread(_objectSpread({}, job), {}, {\n        status: statusUpdate,\n        notes: notesUpdate.trim()\n      }) : job);\n      setJobs(updatedJobs);\n      setSelectedJob(null);\n      setStatusUpdate(\"\");\n      setNotesUpdate(\"\"); // Clear notes\n      setSuccess(\"Job status updated successfully!\");\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error updating job status:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to update job status. Please try again.\");\n      setTimeout(() => setError(null), 3000);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      maxWidth: 800,\n      margin: \"2rem auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: \"1.5rem\",\n        textAlign: \"center\",\n        color: 'var(--color-text)'\n      },\n      children: \"Assigned Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactToPrint, {\n        trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: \"\\uD83D\\uDDA8\\uFE0F Print Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 26\n        }, this),\n        content: () => componentRef.current,\n        documentTitle: \"Assigned Jobs List - \".concat(new Date().toLocaleDateString()),\n        pageStyle: \"@page { size: A4; margin: 10mm; } @media print { body { -webkit-print-color-adjust: exact; } }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '1rem',\n          display: 'none'\n        },\n        className: \"print-only\",\n        children: [\"Assigned Jobs List - \", new Date().toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"text-center\",\n              children: \"No jobs assigned to you.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this) : jobs.map(job => {\n            var _job$user, _job$user$profile, _job$user2, _job$user3, _job$user4, _job$user4$profile, _job$service;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [((_job$user = job.user) === null || _job$user === void 0 ? void 0 : (_job$user$profile = _job$user.profile) === null || _job$user$profile === void 0 ? void 0 : _job$user$profile.name) || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"tel:\".concat((_job$user2 = job.user) === null || _job$user2 === void 0 ? void 0 : _job$user2.phone),\n                  style: {\n                    textDecoration: 'none',\n                    color: 'var(--color-secondary)'\n                  },\n                  children: ((_job$user3 = job.user) === null || _job$user3 === void 0 ? void 0 : _job$user3.phone) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: ((_job$user4 = job.user) === null || _job$user4 === void 0 ? void 0 : (_job$user4$profile = _job$user4.profile) === null || _job$user4$profile === void 0 ? void 0 : _job$user4$profile.address) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_job$service = job.service) === null || _job$service === void 0 ? void 0 : _job$service.type) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(job.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-badge status-\".concat(job.status.toLowerCase().replace(' ', '-').replace('awaiting-admin-confirmation', 'pending')),\n                  children: job.status.replace(' - ', ' ').replace('awaiting admin confirmation', 'Awaiting Admin')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.notes || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setSelectedJob(job);\n                    setStatusUpdate(job.status === 'Completed - Awaiting Admin Confirmation' ? 'Completed' : job.status); // Pre-fill with current status, map new status back to 'Completed' for dropdown\n                    setNotesUpdate(job.notes || \"\"); // Pre-fill with current notes\n                  },\n                  className: \"btn btn-secondary btn-sm\",\n                  children: \"Update Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, job._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: 'var(--color-text)'\n        },\n        children: \"Update Job Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), \" \", ((_selectedJob$user = selectedJob.user) === null || _selectedJob$user === void 0 ? void 0 : (_selectedJob$user$pro = _selectedJob$user.profile) === null || _selectedJob$user$pro === void 0 ? void 0 : _selectedJob$user$pro.name) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"tel:\".concat((_selectedJob$user2 = selectedJob.user) === null || _selectedJob$user2 === void 0 ? void 0 : _selectedJob$user2.phone),\n          style: {\n            textDecoration: 'none',\n            color: 'var(--color-secondary)'\n          },\n          children: ((_selectedJob$user3 = selectedJob.user) === null || _selectedJob$user3 === void 0 ? void 0 : _selectedJob$user3.phone) || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), \" \", ((_selectedJob$user4 = selectedJob.user) === null || _selectedJob$user4 === void 0 ? void 0 : (_selectedJob$user4$pr = _selectedJob$user4.profile) === null || _selectedJob$user4$pr === void 0 ? void 0 : _selectedJob$user4$pr.address) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Service:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), \" \", ((_selectedJob$service = selectedJob.service) === null || _selectedJob$service === void 0 ? void 0 : _selectedJob$service.type) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: statusUpdate,\n          onChange: e => setStatusUpdate(e.target.value),\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cancelled\",\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending - Weather\",\n            children: \"Pending - Weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending - Customer Unavailable\",\n            children: \"Pending - Customer Unavailable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending - Technical\",\n            children: \"Pending - Technical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Notes (e.g., reason for pending/cancellation):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: notesUpdate,\n          onChange: e => setNotesUpdate(e.target.value),\n          placeholder: \"Add any relevant notes or reasons for status change...\",\n          rows: \"3\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleStatusChange(selectedJob._id),\n          disabled: !statusUpdate || statusUpdate === selectedJob.status && notesUpdate === (selectedJob.notes || \"\"),\n          className: \"btn btn-success\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedJob(null),\n          className: \"btn btn-danger\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeJobs, \"UL6zW+KIeD4IatpjuZ5A75syp9k=\");\n_c = EmployeeJobs;\nexport default EmployeeJobs;\nvar _c;\n$RefreshReg$(_c, \"EmployeeJobs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ReactToPrint","jsxDEV","_jsxDEV","EmployeeJobs","_s","_selectedJob$user","_selectedJob$user$pro","_selectedJob$user2","_selectedJob$user3","_selectedJob$user4","_selectedJob$user4$pr","_selectedJob$service","jobs","setJobs","selectedJob","setSelectedJob","statusUpdate","setStatusUpdate","notesUpdate","setNotesUpdate","loading","setLoading","error","setError","success","setSuccess","componentRef","fetchJobs","token","sessionStorage","getItem","response","get","headers","Authorization","concat","data","err","console","intervalId","setInterval","clearInterval","handleStatusChange","jobId","put","status","notes","trim","updatedJobs","map","job","_id","_objectSpread","setTimeout","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","marginBottom","textAlign","color","trigger","content","current","documentTitle","Date","toLocaleDateString","pageStyle","ref","display","length","colSpan","_job$user","_job$user$profile","_job$user2","_job$user3","_job$user4","_job$user4$profile","_job$service","user","profile","name","href","phone","textDecoration","address","service","type","date","toLowerCase","replace","onClick","marginTop","value","onChange","e","target","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["D:/acm/ACM-main/client/src/pages/employee/EmployeeJobs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport ReactToPrint from 'react-to-print'; // NEW: Import ReactToPrint\n\nfunction EmployeeJobs() {\n  const [jobs, setJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [statusUpdate, setStatusUpdate] = useState(\"\");\n  const [notesUpdate, setNotesUpdate] = useState(\"\"); // NEW: State for notes\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  const componentRef = useRef(); // NEW: Ref for the component to print\n\n  // Fetch jobs from API\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        setLoading(true);\n        const token = sessionStorage.getItem('token'); // Changed from localStorage\n        \n        if (!token) {\n          setError(\"Authentication required. Please log in.\");\n          setLoading(false);\n          return;\n        }\n        \n        const response = await axios.get('http://localhost:5000/api/employee/jobs', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        \n        setJobs(response.data);\n        setLoading(false);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching jobs:\", err);\n        setError(\"Failed to load jobs. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    \n    fetchJobs(); // Initial fetch\n\n    const intervalId = setInterval(fetchJobs, 5000); // Poll every 5 seconds\n\n    return () => clearInterval(intervalId); // Clean up interval on component unmount\n  }, []);\n\n  const handleStatusChange = async (jobId) => {\n    if (!statusUpdate) return;\n    \n    try {\n      const token = sessionStorage.getItem('token'); // Changed from localStorage\n      \n      if (!token) {\n        setError(\"Authentication required. Please log in.\");\n        return;\n      }\n      \n      // Correct API endpoint for updating job status\n      await axios.put(`http://localhost:5000/api/employee/jobs/${jobId}`, \n        { status: statusUpdate, notes: notesUpdate.trim() }, // Include notes\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      \n      // Update local state after successful API call\n      const updatedJobs = jobs.map((job) =>\n        job._id === jobId ? { ...job, status: statusUpdate, notes: notesUpdate.trim() } : job\n      );\n      \n      setJobs(updatedJobs);\n      setSelectedJob(null);\n      setStatusUpdate(\"\");\n      setNotesUpdate(\"\"); // Clear notes\n      setSuccess(\"Job status updated successfully!\");\n      setTimeout(() => setSuccess(null), 3000);\n    } catch (err) {\n      console.error(\"Error updating job status:\", err);\n      setError(err.response?.data?.message || \"Failed to update job status. Please try again.\");\n      setTimeout(() => setError(null), 3000);\n    }\n  };\n\n  if (loading) {\n    return <p className=\"text-center\">Loading jobs...</p>;\n  }\n\n  if (error) {\n    return <div className=\"status-message error\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"card\" style={{ maxWidth: 800, margin: \"2rem auto\" }}>\n      <h3 style={{ marginBottom: \"1.5rem\", textAlign: \"center\", color: 'var(--color-text)' }}>Assigned Jobs</h3>\n\n      {success && (\n        <div className=\"status-message success\">\n          {success}\n        </div>\n      )}\n      {error && (\n        <div className=\"status-message error\">\n          {error}\n        </div>\n      )}\n\n      {/* Print Button */}\n      <div style={{ textAlign: 'right', marginBottom: '1rem' }}>\n        <ReactToPrint\n          trigger={() => <button className=\"btn btn-secondary\">🖨️ Print Jobs</button>}\n          content={() => componentRef.current}\n          documentTitle={`Assigned Jobs List - ${new Date().toLocaleDateString()}`}\n          pageStyle=\"@page { size: A4; margin: 10mm; } @media print { body { -webkit-print-color-adjust: exact; } }\"\n        />\n      </div>\n\n      {/* Jobs Table - wrapped with ref for printing */}\n      <div ref={componentRef}>\n        <h3 style={{ textAlign: 'center', marginBottom: '1rem', display: 'none' }} className=\"print-only\">\n          Assigned Jobs List - {new Date().toLocaleDateString()}\n        </h3>\n        <table className=\"data-table\">\n          <thead>\n            <tr>\n              <th>Customer</th>\n              <th>Service</th>\n              <th>Date</th>\n              <th>Status</th>\n              <th>Notes</th> {/* NEW: Notes column */}\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {jobs.length === 0 ? (\n              <tr>\n                <td colSpan=\"6\" className=\"text-center\">No jobs assigned to you.</td>\n              </tr>\n            ) : (\n              jobs.map((job) => (\n                <tr key={job._id}>\n                  <td>\n                    {job.user?.profile?.name || 'N/A'}\n                    <br />\n                    <a href={`tel:${job.user?.phone}`} style={{ textDecoration: 'none', color: 'var(--color-secondary)' }}>\n                      {job.user?.phone || 'N/A'}\n                    </a>\n                    <br />\n                    <small>{job.user?.profile?.address || 'N/A'}</small>\n                  </td>\n                  <td>{job.service?.type || 'N/A'}</td>\n                  <td>{new Date(job.date).toLocaleDateString()}</td>\n                  <td>\n                    <span className={`status-badge status-${job.status.toLowerCase().replace(' ', '-').replace('awaiting-admin-confirmation', 'pending')}`}>\n                      {job.status.replace(' - ', ' ').replace('awaiting admin confirmation', 'Awaiting Admin')}\n                    </span>\n                  </td>\n                  <td>{job.notes || 'N/A'}</td> {/* Display notes */}\n                  <td>\n                    <button\n                      onClick={() => {\n                        setSelectedJob(job);\n                        setStatusUpdate(job.status === 'Completed - Awaiting Admin Confirmation' ? 'Completed' : job.status); // Pre-fill with current status, map new status back to 'Completed' for dropdown\n                        setNotesUpdate(job.notes || \"\"); // Pre-fill with current notes\n                      }}\n                      className=\"btn btn-secondary btn-sm\"\n                    >\n                      Update Status\n                    </button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Update Status Panel */}\n      {selectedJob && (\n        <div className=\"card\" style={{ marginTop: \"20px\" }}>\n          <h4 style={{ marginBottom: \"1rem\", color: 'var(--color-text)' }}>Update Job Status</h4>\n          <p>\n            <strong>Customer:</strong> {selectedJob.user?.profile?.name || 'N/A'}\n          </p>\n          <p>\n            <strong>Phone:</strong> <a href={`tel:${selectedJob.user?.phone}`} style={{ textDecoration: 'none', color: 'var(--color-secondary)' }}>{selectedJob.user?.phone || 'N/A'}</a>\n          </p>\n          <p>\n            <strong>Address:</strong> {selectedJob.user?.profile?.address || 'N/A'}\n          </p>\n          <p style={{ marginBottom: \"1rem\" }}>\n            <strong>Service:</strong> {selectedJob.service?.type || 'N/A'}\n          </p>\n\n          <div className=\"form-group\">\n            <label>Status:</label>\n            <select\n              value={statusUpdate}\n              onChange={(e) => setStatusUpdate(e.target.value)}\n              className=\"form-control\"\n            >\n              <option value=\"\">Select Status</option>\n              <option value=\"Pending\">Pending</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Completed\">Completed</option> {/* Employee sees 'Completed' */}\n              <option value=\"Cancelled\">Cancelled</option>\n              <option value=\"Pending - Weather\">Pending - Weather</option>\n              <option value=\"Pending - Customer Unavailable\">Pending - Customer Unavailable</option>\n              <option value=\"Pending - Technical\">Pending - Technical</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Notes (e.g., reason for pending/cancellation):</label>\n            <textarea\n              value={notesUpdate}\n              onChange={(e) => setNotesUpdate(e.target.value)}\n              placeholder=\"Add any relevant notes or reasons for status change...\"\n              rows=\"3\"\n              className=\"form-control\"\n            ></textarea>\n          </div>\n\n          <div className=\"form-actions-group\">\n            <button\n              onClick={() => handleStatusChange(selectedJob._id)}\n              disabled={!statusUpdate || (statusUpdate === selectedJob.status && notesUpdate === (selectedJob.notes || \"\"))}\n              className=\"btn btn-success\"\n            >\n              Update\n            </button>\n            <button\n              onClick={() => setSelectedJob(null)}\n              className=\"btn btn-danger\"\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default EmployeeJobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}